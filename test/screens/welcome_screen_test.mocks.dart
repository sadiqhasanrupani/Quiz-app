// Mocks generated by Mockito 5.4.4 from annotations
// in quiz_app/test/screens/welcome_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:quiz_app/models/quiz_result.dart' as _i4;
import 'package:quiz_app/services/storage_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [StorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageService extends _i1.Mock implements _i2.StorageService {
  MockStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveLastScore(_i4.QuizResult? result) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveLastScore,
          [result],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i4.QuizResult? getLastScore() => (super.noSuchMethod(
        Invocation.method(
          #getLastScore,
          [],
        ),
      ) as _i4.QuizResult?);

  @override
  _i3.Future<void> saveResumeData({
    required int? currentQuestion,
    required List<int?>? answers,
    required DateTime? startTime,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveResumeData,
          [],
          {
            #currentQuestion: currentQuestion,
            #answers: answers,
            #startTime: startTime,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  Map<String, dynamic>? getResumeData() => (super.noSuchMethod(
        Invocation.method(
          #getResumeData,
          [],
        ),
      ) as Map<String, dynamic>?);

  @override
  _i3.Future<void> clearResumeData() => (super.noSuchMethod(
        Invocation.method(
          #clearResumeData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  List<_i4.QuizResult> getAllScores() => (super.noSuchMethod(
        Invocation.method(
          #getAllScores,
          [],
        ),
        returnValue: <_i4.QuizResult>[],
      ) as List<_i4.QuizResult>);

  @override
  _i3.Future<void> clearAllData() => (super.noSuchMethod(
        Invocation.method(
          #clearAllData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}